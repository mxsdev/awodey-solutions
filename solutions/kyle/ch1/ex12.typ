#import "../../../utils.typ"
#import utils: *

Given

#align(center)[#image("ex12_1.excalidraw.png", width:40%)]

we are asked to show:

#align(center)[#image("ex12_2.excalidraw.png", width:40%)]

The functor $cat(C)$ which takes the graph $G$ to its free category $cat(C)(G)$
takes every path in $G$ between nodes $A$ and $B$ to a morphism between objects $A$ and $B$. This means that every morphism in $cat(C)(G)$ is uniquely determined by the ordered set of edges which make up the corresponding path; if two ordered sets of edges are equal (they have the same edge set in the same order), then they map to the same morphism in $cat(C)(G)$. Because $h$ is a graph homomorphism, it maps vertices to verticies, and edges to edges in such a way that the source and target of each edge get mapped according to the vertex mapping.

#align(center)[#image("ex12_4.excalidraw.png", width:30%)]

Let $p$ be an arbitrary path in the graph $G$ from vertex $A arrow B$. $p$ is also a morphism in $cat(C)(G)$, by the definition of $cat(C)(G)$. $p$ is composed of edges in the graph, which we can write $p = (e_1, ..., e_n)$. Let $p'$ be the path generated by applying $h$ elementwise to $p$. That is, $p' := (h(e_1) ... h(e_n))$. Let us define $macron(h)$ to be the functor that maps objects according to the graph homomorphism $h$ and morphisms $macron(h): p  |-> p'$. $p$ is uniquely defined by the edges that make it up, so this functor is the unique functor mapping the free category $cat(C)(G)$ to $D$.



